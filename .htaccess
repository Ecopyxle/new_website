# Ecopyxle Website - Hostinger Configuration
# This file handles routing and optimization for the static Next.js build

# Enable GZIP compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
</IfModule>

# Cache static assets
<IfModule mod_expires.c>
    ExpiresActive on
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/avif "access plus 1 year"
    ExpiresByType application/pdf "access plus 1 month"
    ExpiresByType text/html "access plus 1 day"
</IfModule>

# Security headers
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=()"
</IfModule>

# Enable RewriteEngine
RewriteEngine On

# Force HTTPS (uncomment when SSL is ready)
# RewriteCond %{HTTPS} off
# RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Handle static build routing - if 'out' directory exists, serve from there
RewriteCond %{REQUEST_URI} !^/out/
RewriteCond %{DOCUMENT_ROOT}/out%{REQUEST_URI} -f
RewriteRule ^(.*)$ /out/$1 [L]

RewriteCond %{REQUEST_URI} !^/out/
RewriteCond %{DOCUMENT_ROOT}/out%{REQUEST_URI} -d
RewriteRule ^(.*)$ /out/$1/ [L]

# Handle Next.js trailing slashes for static export
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{DOCUMENT_ROOT}/out%{REQUEST_URI}/index.html -f
RewriteRule ^(.*)$ /out/$1/index.html [L]

# Handle clean URLs without trailing slash
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{DOCUMENT_ROOT}/out%{REQUEST_URI}.html -f
RewriteRule ^(.*)$ /out/$1.html [L]

# Fallback to index.html for SPA routing (if static build exists)
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{DOCUMENT_ROOT}/out/index.html -f
RewriteRule ^(.*)$ /out/index.html [L]

# If no static build, fall back to PHP handler
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{DOCUMENT_ROOT}/out/index.html !-f
RewriteRule ^(.*)$ /index.php [L]

# Prevent access to sensitive files
<Files ~ "^\.">
    Order allow,deny
    Deny from all
</Files>

<Files ~ "(composer\.(json|lock)|package\.(json|lock)|\.env|next\.config\.js|tsconfig\.json)$">
    Order allow,deny
    Deny from all
</Files>
